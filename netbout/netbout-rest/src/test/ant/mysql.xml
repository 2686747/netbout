<?xml version="1.0"?>
<project name="mysql">

    <!-- MySQL 5.5 has to be installed at this folder -->
    <property name="mysql.dir" value="/usr/local/mysql-bin"/>

    <target name="start">
        <!-- see http://stackoverflow.com/questions/3510673 -->
        <exec executable="sh" failonerror="true" outputproperty="expired">
            <arg value="-c"/>
            <arg value="ps aux | grep '[m]ysql-${database}.sock' | awk '{print $2}'"/>
        </exec>
        <echo message="expired '${database}' mysqld processes: '${expired}'"/>
        <exec executable="sh" failonerror="false">
            <arg value="-c"/>
            <arg value="kill -s KILL ${expired}"/>
        </exec>
        <delete dir="${directory}/mysql-${database}" quiet="true"/>
        <mkdir dir="${directory}/mysql-${database}"/>
        <delete dir="${directory}/mysql-${database}-temp" quiet="true"/>
        <mkdir dir="${directory}/mysql-${database}-temp"/>
        <delete file="${directory}/mysql-${database}.sock" quiet="true"/>
        <delete file="${directory}/mysql-${database}.log" quiet="true"/>
        <exec dir="${mysql.dir}" executable="./scripts/mysql_install_db" failonerror="true">
            <arg value="--no-defaults"/>
            <arg value="--basedir=."/>
            <arg value="--datadir=${directory}/mysql-${database}"/>
        </exec>
        <exec dir="${mysql.dir}" executable="./bin/mysqld" failonerror="true" outputproperty="mysql.version">
            <arg value="--version"/>
        </exec>
        <fail message="invalid version of MySQL server installed">
            <condition>
                <not>
                    <contains string="${mysql.version}" substring="Ver 5.5"/>
                </not>
            </condition>
        </fail>
        <echo message="starting MySQL ${mysql.version} at localhost:${mysql.port.rest}..." />
        <exec dir="${mysql.dir}" executable="./bin/mysqld" spawn="true">
            <arg value="--basedir=."/>
            <arg value="--general_log"/>
            <arg value="--general_log_file=${directory}/mysql-${database}.log"/>
            <arg value="--log_error=${directory}/mysql-${database}.log"/>
            <arg value="--log_warnings"/>
            <arg value="--binlog-ignore-db=${database}"/>
            <arg value="--datadir=${directory}/mysql-${database}"/>
            <arg value="--tmpdir=${directory}/mysql-${database}-temp"/>
            <arg value="--socket=${directory}/mysql-${database}.sock"/>
            <arg value="--pid-file=${directory}/mysql-${database}.pid"/>
            <arg value="--port=${port}"/>
        </exec>
        <waitfor maxwait="180" maxwaitunit="second" timeoutproperty="timeout">
            <available file="${directory}/mysql-${database}.sock"/>
        </waitfor>
        <fail message="MySQL server is not up">
            <condition>
                <isset property="timeout"/>
            </condition>
        </fail>
        <echo message="MySQL '${database}' is ready at localhost:${port}" />
        <exec dir="${mysql.dir}" executable="./bin/mysqladmin" failonerror="true">
            <arg value="--port=${port}"/>
            <arg value="--user=root"/>
            <arg value="--socket=${directory}/mysql-${database}.sock"/>
            <arg value="password"/>
            <arg value="root"/>
        </exec>
        <exec dir="${mysql.dir}" executable="./bin/mysql" failonerror="true"
            inputstring="CREATE DATABASE ${database};">
            <arg value="--port=${port}"/>
            <arg value="--user=root"/>
            <arg value="--password=root"/>
            <arg value="--socket=${directory}/mysql-${database}.sock"/>
        </exec>
        <sql driver="com.mysql.jdbc.Driver"
            url="jdbc:mysql://localhost:${port}/${database}"
            userid="root" password="root" print="true">SHOW TABLES</sql>
    </target>

    <target name="stop">
        <exec dir="${mysql.dir}" executable="./bin/mysqladmin" failonerror="true">
            <arg value="--port=${port}"/>
            <arg value="--user=root"/>
            <arg value="--password=root"/>
            <arg value="--socket=${directory}/mysql-${database}.sock"/>
            <arg value="shutdown"/>
        </exec>
        <echo message="MySQL of '${database}' is shutdown"/>
    </target>

</project>
